name: API Tests

on:
    push:
        branches: [main, develop]
        paths:
            - "apps/api/**"
            - ".github/workflows/api-test.yml"
    pull_request:
        branches: [main, develop]
        paths:
            - "apps/api/**"
            - ".github/workflows/api-test.yml"

jobs:
    test:
        name: Run Pytest
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: apps/api

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"
                  cache: "pip"

            - name: Install Poetry
              uses: snok/install-poetry@v1
              with:
                  version: latest
                  virtualenvs-create: true
                  virtualenvs-in-project: true

            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v4
              with:
                  path: .venv
                  key: venv-v2-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

            - name: Install dependencies
              run: poetry install --no-interaction --no-root

            - name: Run pytest
              run: |
                  poetry run pytest tests/ -v

            - name: Check test results
              if: failure()
              run: |
                  echo "❌ Tests failed!"
                  echo "Run the following command locally to reproduce:"
                  echo "  poetry run pytest tests/ -v"
                  exit 1

    summary:
        name: Test Summary
        runs-on: ubuntu-latest
        needs: [test]
        if: always()

        steps:
            - name: Check test status
              if: needs.test.result == 'failure'
              run: |
                  echo "::error::Pytest tests failed. Please run 'poetry run pytest tests/ -v' locally to see errors."
                  exit 1

            - name: Success message
              if: needs.test.result == 'success'
              run: |
                  echo "✅ All tests passed!"
