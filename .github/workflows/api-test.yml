name: API Tests

on:
    push:
        branches: [main, develop]
        paths:
            - "apps/api/**"
            - ".github/workflows/api-test.yml"
    pull_request:
        branches: [main, develop]
        paths:
            - "apps/api/**"
            - ".github/workflows/api-test.yml"

jobs:
    test:
        name: Run Pytest
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: apps/api

        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_USER: olympus
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: olympus_mvp_test
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

            redis:
                image: redis:7-alpine
                ports:
                    - 6379:6379
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"
                  cache: "pip"

            - name: Install Poetry
              uses: snok/install-poetry@v1
              with:
                  version: latest
                  virtualenvs-create: true
                  virtualenvs-in-project: true

            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v4
              with:
                  path: apps/api/.venv
                  key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

            - name: Install dependencies
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: poetry install --no-interaction --no-root

            - name: Run pytest
              env:
                  DATABASE_URL: postgresql+asyncpg://olympus:password@localhost:5432/olympus_mvp_test
                  REDIS_URL: redis://localhost:6379
                  JWT_SECRET: test-secret-key
                  USE_LOCAL_DB: true
              run: |
                  poetry run pytest tests/ -v --tb=short --cov=app --cov-report=term-missing

            - name: Check test results
              if: failure()
              run: |
                  echo "❌ Tests failed!"
                  echo "Run the following command locally to reproduce:"
                  echo "  poetry run pytest tests/ -v"
                  exit 1

    summary:
        name: Test Summary
        runs-on: ubuntu-latest
        needs: [test]
        if: always()

        steps:
            - name: Check test status
              if: needs.test.result == 'failure'
              run: |
                  echo "::error::Pytest tests failed. Please run 'poetry run pytest tests/ -v' locally to see errors."
                  exit 1

            - name: Success message
              if: needs.test.result == 'success'
              run: |
                  echo "✅ All tests passed!"
